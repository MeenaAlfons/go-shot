version: "3.8"

services:

  bash:
    image: bash
    command: bash
    depends_on:
      - localstack
      - testme
    networks:
      - go-shot

  testme:
    build:
      context: .
    command: sh -c "sleep 4; /app/bin/test-me"
    environment:
      - AWS_ACCESS_KEY_ID='123'
      - AWS_SECRET_KEY='xyz'
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_REGION=us-east-1
      - QUEUE=test-queue
      - TOPIC=test-topic
      - MAX_BATCH_INTERVAL=5
      - MAX_BATCH_SIZE=10
      - PORT=9999
      - HOST=testme
    ports:
      - "9999:9999"
    depends_on:
      - localstack
      - worker
    networks:
      - go-shot

  worker:
    build:
      context: .
    command: sh -c "sleep 2; /app/bin/worker"
    environment:
      - AWS_ACCESS_KEY_ID='123'
      - AWS_SECRET_KEY='xyz'
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_REGION=us-east-1
      - QUEUE=test-queue
      - TOPIC=test-topic
      - MAX_BATCH_INTERVAL=5
      - MAX_BATCH_SIZE=10
      - PORT=9999
      - HOST=testme
    depends_on:
      - localstack
    networks:
      - go-shot

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack:2.0.1
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      - LS_LOG=error
      - DEBUG=${DEBUG-}
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./.volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - go-shot

networks:
  go-shot:
